include:
  - local: 'gitlab-ci/main.yml'

stages:
  - lint
  - test
  - build
  - deploy

variables:
  PYTHON_VERSION: "3.10"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - .pip-cache/
    - .uv/
    - .ruff_cache/

# Shared configuration for Python jobs
.python_template:
  image: python:${PYTHON_VERSION}-slim
  before_script:
    - pip install uv
    - uv venv
    - uv pip install -e .

lint:
  stage: lint
  extends: .python_template
  script:
    - uv pip install ruff mypy
    - uv run ruff check .
    - uv run mypy src/clustering

test:
  stage: test
  extends: .python_template
  script:
    - uv pip install pytest pytest-cov
    - uv run pytest tests/ -v --cov=src/clustering
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - |
      if [ "$CI_COMMIT_BRANCH" == "main" ]; then
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG $CI_REGISTRY_IMAGE:latest
      fi
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - |
      if [ "$CI_COMMIT_BRANCH" == "main" ]; then
        docker push $CI_REGISTRY_IMAGE:latest
      fi

deploy_dev:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - |
      curl -X POST \
        -F token=$DEPLOY_TOKEN \
        -F ref=main \
        -F "variables[ENVIRONMENT]=dev" \
        -F "variables[IMAGE_TAG]=$CI_COMMIT_REF_SLUG" \
        $DEPLOY_WEBHOOK_URL
  environment:
    name: dev
  only:
    - branches
  except:
    - main
    - production

deploy_prod:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - |
      curl -X POST \
        -F token=$DEPLOY_TOKEN \
        -F ref=main \
        -F "variables[ENVIRONMENT]=prod" \
        -F "variables[IMAGE_TAG]=$CI_COMMIT_REF_SLUG" \
        $DEPLOY_WEBHOOK_URL
  environment:
    name: production
  only:
    - main
    - production
  when: manual
