alerts:
  enabled: true
  threshold: WARNING
logger:
  level: DEBUG
  sink: logs/dagster_dev.log

# Base paths configuration - can be overridden by environment variables
paths:
  base_data_dir: ${env:DATA_DIR,/workspaces/testing-dagster/data}
  internal_data_dir: ${env:INTERNAL_DATA_DIR,${paths.base_data_dir}/internal}
  external_data_dir: ${env:EXTERNAL_DATA_DIR,${paths.base_data_dir}/external}
  merging_data_dir: ${env:MERGING_DATA_DIR,${paths.base_data_dir}/merging}

# Job configuration parameters
job_params:
  ### --- Feature engineering parameters --- ###
  ignore_features: ["STORE_NBR"]
  
  # Normalization settings
  normalize: true
  norm_method: "robust"
  
  # Imputation settings
  imputation_type: "simple"
  numeric_imputation: "mean"
  categorical_imputation: "mode"
  
  # Outlier detection
  outlier_detection: true
  outliers_method: "iforest"
  outlier_threshold: 0.05
  
  # Dimensionality reduction
  pca_active: true
  pca_method: "linear"
  pca_components: 0.8
  
  # Metadata generation
  feature_metadata_detail: "full"
  
  ### --- Model training parameters --- ###

  # Optimal cluster count parameters
  min_clusters: 2
  max_clusters: 10
  metrics: ["silhouette", "calinski_harabasz", "davies_bouldin"]

  # Model training parameters
  algorithm: "kmeans"
  
  # Random seed for reproducibility
  session_id: 42

# Data sources and destinations
readers:
  # Internal data sources
  internal_ns_map:
    kind: "CSVReader"
    config:
      path: ${paths.internal_data_dir}/ns_map.csv
  internal_ns_sales:
    kind: "CSVReader"
    config:
      path: ${paths.internal_data_dir}/ns_sales.csv
  output_sales:
    kind: "PickleReader"
    config:
      path: ${paths.internal_data_dir}/sales_by_category.pkl
  
  # External data sources
  external_placerai:
    kind: "CSVReader"
    config:
      path: ${paths.external_data_dir}/placerai.csv
  external_data_source:
    kind: "PickleReader"
    config:
      path: ${paths.external_data_dir}/processed_external_data.pkl

writers:
  # Internal data writers
  internal_sales_output:
    kind: "PickleWriter"
    config:
      path: ${paths.internal_data_dir}/sales_by_category.pkl
  internal_sales_percent_output:
    kind: "PickleWriter"
    config:
      path: ${paths.internal_data_dir}/sales_by_category_percent.pkl
  internal_clusters_output:
    kind: "SnowflakeWriter"
    config:
      table: DEV_CLUSTERING_DB.PROCESSED.INTERNAL_CLUSTERS
      database: DEV_CLUSTERING_DB
      schema: PROCESSED
  feature_engineering_output:
    kind: "PickleWriter"
    config:
      path: ${paths.internal_data_dir}/engineered_features.pkl
  model_output:
    kind: "PickleWriter"
    config:
      path: ${paths.internal_data_dir}/clustering_models.pkl
  cluster_assignments:
    kind: "PickleWriter"
    config:
      path: ${paths.internal_data_dir}/cluster_assignments.pkl
  
  # External data writers
  external_data_output:
    kind: "PickleWriter"
    config:
      path: ${paths.external_data_dir}/processed_external_data.pkl
  external_model_output:
    kind: "PickleWriter"
    config:
      path: ${paths.external_data_dir}/clustering_models.pkl
  external_cluster_assignments:
    kind: "PickleWriter"
    config:
      path: ${paths.external_data_dir}/cluster_assignments.pkl
  merged_clusters_output:
    kind: "SnowflakeWriter"
    config:
      table: DEV_CLUSTERING_DB.PROCESSED.MERGED_CLUSTERS
      database: DEV_CLUSTERING_DB
      schema: PROCESSED
  merged_cluster_assignments:
    kind: "PickleWriter"
    config:
      path: ${paths.merging_data_dir}/merged_cluster_assignments.pkl
