[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "clustering"
version = "0.1.0"
description = "Best practices and design patterns in Python"
authors = [{ name = "Jackson Yang", email = "Jackson.Yang@cvshealth.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
dependencies = [
    "apache-airflow>=2.10.5",
    "dagster-webserver>=1.10.4",
    "loguru>=0.7.2",
    "matplotlib<3.8.0",
    "numba>=0.60.0",
    "numpy>=1.26.0,<2.0.0", # Compatible with pandas==2.1.4
    "omegaconf>=2.3.0",
    "pandas>=2.1.4",
    "pandera>=0.21.0",
    "plotly>=5.24.1",
    "plyer>=2.1.0",
    "psutil>=6.1.0",
    "pyarrow<19.0.0",
    "pydantic-settings>=2.6.1",
    "pydantic>=2.10.3",
    "pynvml>=12.0.0",
    "scikit-learn<1.5.0", # Compatible with pycaret==3.3.2
    "setuptools>=75.6.0",
    "shap>=0.46.0",
    "ipykernel>=6.29.5",
    "kaleido @ https://files.pythonhosted.org/packages/45/8e/4297556be5a07b713bb42dde0f748354de9a6918dee251c0e6bdcda341e7/kaleido-0.2.1-py2.py3-none-macosx_11_0_arm64.whl",
    "snowflake-connector-python>=3.13.2",
    "sqlalchemy<2.0",
    "openpyxl>=3.1.5",
    "mlflow>=2.16.0",
    "yellowbrick>=1.5",
    "dask>=2025.2.0",
    "azure-identity>=1.21.0",
    "duckdb>=1.2.1",
    "azure-storage-blob>=12.25.0",
    "poethepoet",
    "pycaret>=3.3.0",
    "dvc[azure]>=3.59.1",
    "fastexcel>=0.13.0",
    "ruff>=0.4.8",
    "dagster>=1.10.7",
]

# Optional dependency groups
[project.optional-dependencies]
dev = [
    "pyright==1.1.389",
    "mypy==1.13.0",
    "ruff",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-xdist",
    "typer",
    "rich",
    "polars",
    "pytest_mock",
    "packaging",
    "grpcio-tools~=1.70.0",
    "mypy-protobuf",
    "cookiecutter",
    "poethepoet",
    "tomli",
    "tomli-w",
    "chainlit",
    "streamlit",
    "niagara>=0.0.1.2",
    "pync>=2.0.3",
    "jupyter-book>=1.0.4.post1",
    "memory-profiler>=0.61.0",
    "pandas-stubs",
    "types-requests",
    "types-pyyaml",
]

[tool.hatch.build.targets.wheel]
packages = ["src/clustering"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv.sources]
kaleido = { url = "https://files.pythonhosted.org/packages/45/8e/4297556be5a07b713bb42dde0f748354de9a6918dee251c0e6bdcda341e7/kaleido-0.2.1-py2.py3-none-macosx_11_0_arm64.whl" }
# pycaret = { git = "https://github.com/Jackson-Yang_cvsh/modified-pycaret.git" }

[[tool.uv.index]]
name = "gitlab-registry"
url = "https://pypi.org/simple"

[tool.ruff]
line-length = 120
fix = true
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
# python_version = "3.12"
ignore_errors = true
# strict = true
# ignore_missing_imports = true
# disallow_untyped_defs = true
# no_implicit_optional = true
# check_untyped_defs = true
# warn_return_any = true
# show_error_codes = true
# warn_unused_ignores = false
# disallow_incomplete_defs = true
# disallow_untyped_decorators = true
# disallow_any_unimported = true

[tool.pyright]
reportInvalidTypeForm = false
typeCheckingMode = "off"
# include = ["src", "tests"]
# reportUnnecessaryIsInstance = false
# reportMissingTypeStubs = false
# reportGeneralTypeIssues = false

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]         # allow use of assert

[tool.coverage.run]
source = ["clustering"]
omit = ["*/tests/*", "*/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
