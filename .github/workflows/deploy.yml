name: Deploy to Azure

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production # Add environment reference for secrets organization

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: "Log in to Azure"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Log in to ACR using Azure CLI
      - name: "Log in to ACR"
        run: az acr login --name ${{ secrets.ACR_NAME }}

      # Build and tag the Docker image
      - name: "Build and tag image"
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Building image: ${{ secrets.ACR_LOGIN_SERVER }}/flatbot:$IMAGE_TAG"
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/flatbot:$IMAGE_TAG -t ${{ secrets.ACR_LOGIN_SERVER }}/flatbot:latest .

      # Push the image to ACR
      - name: "Push image to ACR"
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/flatbot:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/flatbot:latest

      # Restart the container instance to pull the new image
      - name: "Restart container instance"
        run: |
          echo "Restarting container instance: ${{ secrets.CONTAINER_INSTANCE_NAME }}"
          az container restart --name ${{ secrets.CONTAINER_INSTANCE_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP_NAME }}

      # Output the app URL
      - name: "Output app URL"
        run: |
          echo "Application deployed to: ${{ secrets.APP_URL }}"
