{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JobConfiguration",
  "description": "Configuration for clustering jobs",
  "type": "object",
  "required": ["job"],
  "properties": {
    "job": {
      "type": "object",
      "required": ["kind"],
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of job to run",
          "enum": [
            "internal_preprocessing",
            "internal_clustering",
            "external_preprocessing",
            "external_clustering",
            "merge_int_ext",
            "exp_merge_int_ext"
          ]
        },
        "logger_service": {
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
              "default": "INFO"
            },
            "format": {
              "type": "string",
              "default": "[{time:YYYY-MM-DD HH:mm:ss}] {level} | {message}"
            },
            "file": {
              "type": ["string", "null"]
            }
          }
        },
        "alerts_service": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "threshold": {
              "type": "string",
              "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
              "default": "WARNING"
            }
          }
        },
        "source": {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["azure_blob", "dataframe", "memory", "file"]
            },
            "container": {
              "type": ["string", "null"]
            },
            "path": {
              "type": ["string", "null"]
            },
            "format": {
              "type": ["string", "null"],
              "enum": ["csv", "parquet", "json", null]
            }
          }
        },
        "sources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/properties/job/properties/source"
          }
        },
        "params": {
          "type": "object",
          "properties": {
            "algorithm": {
              "type": "string",
              "enum": ["kmeans", "hierarchical", "dbscan"]
            },
            "n_clusters": {
              "type": "integer",
              "minimum": 1
            },
            "random_state": {
              "type": ["integer", "null"]
            },
            "features_to_include": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outlier_removal": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string",
                  "enum": ["iqr", "zscore", "none"]
                },
                "threshold": {
                  "type": "number"
                }
              }
            },
            "imputation": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string",
                  "enum": ["mean", "median", "mode", "constant", "none"]
                },
                "value": {
                  "type": ["number", "null"]
                }
              }
            },
            "scaling": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string",
                  "enum": ["standard", "minmax", "robust", "none"]
                }
              }
            },
            "feature_weights": {
              "type": "object",
              "additionalProperties": {
                "type": "number"
              }
            },
            "mlflow": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "experiment_name": {
                  "type": "string"
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "internal_weight": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "external_weight": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "approach": {
              "type": "string",
              "enum": ["ensemble", "hierarchical", "weighted"]
            },
            "n_final_clusters": {
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "output": {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["azure_blob", "memory", "file"]
            },
            "container": {
              "type": ["string", "null"]
            },
            "path": {
              "type": ["string", "null"]
            },
            "format": {
              "type": ["string", "null"],
              "enum": ["csv", "parquet", "json", null]
            },
            "visualizations": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "output_dir": {
                  "type": "string"
                }
              }
            },
            "report": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "template": {
                  "type": "string"
                },
                "output": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "kind": {
                "enum": ["internal_preprocessing", "external_preprocessing"]
              }
            }
          },
          "then": {
            "required": ["source", "params", "output"]
          }
        },
        {
          "if": {
            "properties": {
              "kind": {
                "enum": ["internal_clustering", "external_clustering"]
              }
            }
          },
          "then": {
            "required": ["source", "params", "output"]
          }
        },
        {
          "if": {
            "properties": {
              "kind": {
                "enum": ["merge_int_ext", "exp_merge_int_ext"]
              }
            }
          },
          "then": {
            "required": ["sources", "params", "output"]
          }
        }
      ]
    }
  }
} 